[{"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/index.js":"1","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/App.js":"2","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/reportWebVitals.js":"3","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/Board.js":"4","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/Note.js":"5","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/BoardRedux.js":"6","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/reducers/index.js":"7","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/reducers/BoardReducer.js":"8","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/BoardContainer.js":"9","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/actions/BoardActions.js":"10","/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/NoteContainer.js":"11"},{"size":1126,"mtime":1610672459203,"results":"12","hashOfConfig":"13"},{"size":432,"mtime":1610671818535,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610375404594,"results":"15","hashOfConfig":"13"},{"size":2325,"mtime":1610392571437,"results":"16","hashOfConfig":"13"},{"size":2836,"mtime":1610386032697,"results":"17","hashOfConfig":"13"},{"size":664,"mtime":1610671697601,"results":"18","hashOfConfig":"13"},{"size":135,"mtime":1610672157708,"results":"19","hashOfConfig":"13"},{"size":1403,"mtime":1610674145949,"results":"20","hashOfConfig":"13"},{"size":1987,"mtime":1610674365627,"results":"21","hashOfConfig":"13"},{"size":824,"mtime":1610670584988,"results":"22","hashOfConfig":"13"},{"size":843,"mtime":1610674394793,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"86m31a",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/index.js",["50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import Board from './components/Board';\n\n// IMPORTS FOR REDUX\nimport { Provider } from 'react-redux';\nimport BoardContainer from './components/BoardContainer';\n// import registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\n \n// Thunk allows us to use async functions as actions, instead of plain objects\nconst store = createStore(reducer, applyMiddleware(thunk));\n\n\t\nReactDOM.render(\n  <Provider store={store}>\n    <BoardContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["51","52"],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/App.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/reportWebVitals.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/Board.js",["53"],"import React, { Component } from \"react\";\nimport \"../css/Board.css\";\nimport Note from './Note';\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n        notes: [\n            // {\n            //   title: \"Class Notes\",\n            //   body: \"Always use constructors when extending another class\"\n            // },\n            // {\n            //   title: \"My New Address\",\n            //   body: \"2001 N Lonhill Phoenix, AZ 81234\"\n            // },\n            // {\n            //   title: \"React Notes\",\n            //   body: \"Everything in React is a component\"\n            // }\n          ]\n    }\n  }\n\n  addNote() {\n    //   ADDS TO END OF AN ARRAY\n    this.state.notes.push(\n      {\n        title: \"Edit Me\",\n        body: \"Change Me\",\n        id: Date.now()\n      }\n    );\n    // .SETSTATE() DOES TWO THINGS\n    //  -- UPDATES THE STATE WITH THE NEW INFORMATION\n    // -- RE-RENDERS THE COMPONENT WITH THE UPDATED STATE\n    this.setState(\n      {\n        notes: this.state.notes\n      }\n    );\n  }\n\n//   delete function \n// takes in an id of the 'card' from which the dlt button will be clicked\n  deleteNote(id){\n    //   creating a new variable to hold the new array of notes, without the one we're gonna delte\n    let newNoteArr = this.state.notes;\n    // map through the array of notes from our current state\n    newNoteArr.map((note, index) => {\n        // if the id of the card that was clicked matches the id of the note we're on\n      if (id === note.id) {\n        //   then remove it from the array\n        newNoteArr.splice(index,1);\n      }\n    });\n    // reset the state with the new array that doesn't hold the card we just deleted\n    this.setState(\n      {\n        notes: newNoteArr\n      }\n    );\n  }\n\n  render() {\n    return (\n        // JSX\n      <div>\n        <div className=\"div-board\">\n        <div className=\"row\">\n            {\n            this.state.notes.map(item => {\n                return <Note title={item.title} body={item.body} key={item.id} id={item.id} deleteHandler={this.deleteNote.bind(this)} />\n              })\n            }\n          \n        </div> \n        </div>\n        <div>\n          <button className=\"btn btn-success add-button\" onClick={this.addNote.bind(this)}>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n",["54","55"],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/Note.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/BoardRedux.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/reducers/index.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/reducers/BoardReducer.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/BoardContainer.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/actions/BoardActions.js",[],"/Users/lauraruizroehrs/Desktop/REACTNOTES/my-notes-project/src/components/NoteContainer.js",[],{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":11},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":51,"column":34,"nodeType":"66","messageId":"67","endLine":51,"endColumn":36},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["70"],["71"],"no-global-assign","no-unsafe-negation"]